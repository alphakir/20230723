Option Explicit

Sub ImportTextFilesToExcel()
    Dim folderDialog As FileDialog
    Dim selectedFolder As String
    Dim textFile As String
    Dim textData As String
    Dim dataArray() As String
    Dim rowIndex As Long, columnIndex As Long
    Dim newWorkbook As Workbook
    Dim newWorksheet As Worksheet
    
    ' フォルダ選択ダイアログを表示し、選択されたフォルダを取得する
    Set folderDialog = Application.FileDialog(msoFileDialogFolderPicker)
    folderDialog.AllowMultiSelect = False
    If folderDialog.Show = -1 Then
        selectedFolder = folderDialog.SelectedItems(1)
    Else
        Exit Sub ' キャンセルされた場合は処理を終了する
    End If
    
    ' 新しいExcelファイルを作成する
    Set newWorkbook = Workbooks.Add
    Set newWorksheet = newWorkbook.Sheets(1)
    
    ' フォルダ内のtxtファイルを取得して処理する
    textFile = Dir(selectedFolder & "\*.txt")
    rowIndex = 1
    
    Do While textFile <> ""
        ' テキストファイルを開いてデータを取得する
        Open selectedFolder & "\" & textFile For Input As #1
        Do While Not EOF(1)
            Line Input #1, textData
            dataArray = Split(textData, "|")
            columnIndex = 1
            ' 配列の要素をExcelシートに書き込む
            For Each item In dataArray
                newWorksheet.Cells(rowIndex, columnIndex).Value = item
                columnIndex = columnIndex + 1
            Next item
            rowIndex = rowIndex + 1
        Loop
        Close #1
        
        textFile = Dir ' 次のファイルを取得する
    Loop
    
    ' Excelファイルを保存する
    Dim saveFileDialog As FileDialog
    Set saveFileDialog = Application.FileDialog(msoFileDialogSaveAs)
    saveFileDialog.Title = "保存先を選択してください"
    saveFileDialog.Show
    newWorkbook.SaveAs saveFileDialog.SelectedItems(1)
    
    ' メッセージを表示して終了する
    MsgBox "処理が完了しました。", vbInformation
    newWorkbook.Close
End Sub

'注意事項:

'このコードは、Excelマクロとして実行してください。VBAエディタに貼り付けて、実行したいマクロのショートカットキーを割り当てることができます。
'フォルダ内のテキストファイルは、| (パイプ) 文字で値を区切っている必要があります。
'テキストファイルは1つのシートに結合され、新しいExcelファイルとして保存されます。
'マクロを実行する前に、データが上書きされないように注意してください。
